// Mixin to center an element horizontally and vertically
// @include center
@mixin center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// Mixin to flexbox
// @include flex(justify value -> default center, align value -> default center, direction value -> default row);
@mixin flex($justify: center, $align: center, $direction: row, $column-gap: unset, $row-gap: unset) {
  display: flex;
  justify-content: $justify;
  align-items: $align;
  flex-direction: $direction;
  column-gap: $column-gap;
  row-gap: $row-gap;
}

// Mixin to grid
@mixin grid($columns-number, $rows-number, $column-gap: unset, $row-gap: unset) {
  display: grid;
  grid-template-columns: $columns-number;
  grid-template-rows: $rows-number;
  column-gap: $column-gap;
  row-gap: $row-gap;
}

@mixin abs-position($top: 50%, $left: 50%) {
  position: absolute;
  transform: translate(-50%, -50%);
  top: $top;
  left: $left;
}

@mixin image-fit($width: 100%, $height: 100%, $object-fit: contain, $object-position: center) {
  width: $width;
  height: $height;
  object-fit: $object-fit;
  object-position: $object-position;
}

// Mixin to create buttons
@mixin button($bg-color, $text-color, $border-radius, $padding-x, $padding-y) {
  display: block;
  padding: $padding-y $padding-x;
  border-radius: $border-radius;
  background-color: $bg-color;
  color: $text-color;
  text-decoration: none;
  border: none;
  cursor: pointer;
  transition: all 0.3s ease-in-out;

  &:hover {
    opacity: 0.9;
    transform: scale(1.02);
  }

  &:focus,
  &:active {
    outline: none;
    box-shadow: none;
    opacity: 0.9;
    transform: scale(1.02);
  }
}

// example
// .my-button {
//   @include button(#0074d9, #ffffff, 4px, 16px, 8px);
// }

// Fade in down mixin
// animation
@-webkit-keyframes fadeInDown {
  from {
    opacity: 0;
    -webkit-transform: translate3d(0, -100%, 0);
    transform: translate3d(0, -100%, 0);
  }

  to {
    opacity: 1;
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }
}

@keyframes fadeInDown {
  from {
    opacity: 0;
    -webkit-transform: translate3d(0, -100%, 0);
    transform: translate3d(0, -100%, 0);
  }

  to {
    opacity: 1;
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }
}

// mixin
@mixin fadeInDown($duration: 0.5s, $delay: 0s) {
  -webkit-animation-name: fadeInDown;
  animation-name: fadeInDown;
  -webkit-animation-duration: $duration;
  animation-duration: $duration;
  -webkit-animation-delay: $delay;
  animation-delay: $delay;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
}

// Fade in left mixin
// animation
@keyframes fadeInLeft {
  from {
    opacity: 0;
    -webkit-transform: translate3d(-100%, 0, 0);
    transform: translate3d(-100%, 0, 0);
  }

  to {
    opacity: 1;
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }
}

// mixins
@mixin fadeInLeft($duration: 1s, $delay: 0s) {
  animation: fadeInLeft $duration ease-out $delay both;
}

// max height for text
@mixin line-clamp($line-number: 2) {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: $line-number;
  line-clamp: $line-number;
  -webkit-box-orient: vertical;
}